apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: dispatcher
spec:
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Release.Namespace }}
  name: dispatcher
  labels:
    application: librenms
spec:
  serviceName: dispatcher
  selector:
    matchLabels:
      component: dispatcher
  replicas: {{ .Values.Dispatcher.instances }}
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      name: dispatcher
      labels:
        application: librenms
        component: dispatcher
    spec:
      initContainers:
      {{- include "librenms.checks" . | indent 6 }}
      containers:
      - name: dispatcher
        image: {{ .Values.Dispatcher.image.repository }}:{{ .Values.Dispatcher.image.tag }}
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: application
        - configMapRef:
            name: dispatcher
        env:
        - name: LIBRENMS_MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_mysql_user
        - name: LIBRENMS_MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_mysql_password
        - name: LIBRENMS_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_redis_password
        - name: LIBRENMS_APPLICATION_KEY
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_application_key
