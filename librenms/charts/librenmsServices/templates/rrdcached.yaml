apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: rrdcached
spec:
  {{- if .Values.rrdcached.external.enabled }}
  type: ClusterIP
  selector: {}
  ports:
  - name: rrdcached
    protocol: TCP
    port: {{ .Values.rrdcached.servicePort }}
    targetPort: {{ .Values.rrdcached.external.port }}
  {{- else }}
  type: ClusterIP
  selector:
    component: rrdcached
  ports:
  - name: rrdcached
    protocol: TCP
    port: {{ .Values.rrdcached.servicePort }}
    targetPort: rrdcached
  {{- end }}
---
{{- if .Values.rrdcached.external.enabled }}
kind: Endpoints
apiVersion: v1
metadata:
  namespace: {{ .Release.Namespace }}
  name: rrdcached
subsets:
- addresses:
  - ip: {{ required "the external RRDCached server address must be provided (librenmsServices.rrdcached.external.address)" .Values.rrdcached.external.address }}
  ports:
  - name: rrdcached
    port: {{ .Values.rrdcached.external.port }}
---
{{- else }}
{{- if eq .Values.rrdcached.storage.type "dynamic" }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rrdcached-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.rrdcached.storage.class }}
  resources:
    requests:
      storage: {{ .Values.rrdcached.storage.size }}
---
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Release.Namespace }}
  name: rrdcached
  labels:
    application: librenms
spec:
  serviceName: rrdcached
  selector:
    matchLabels:
      component: rrdcached
  replicas: 1
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      name: rrdcached
      labels:
        application: librenms
        component: rrdcached
    spec:
      {{- if and (eq .Values.rrdcached.storage.type "dynamic") .Values.rrdcached.storage.subpathRequired }}
      initContainers:
      - name: create-subpath
        image: {{ .Values.subpath.image.repository }}:{{ .Values.subpath.image.tag }}
        imagePullPolicy: IfNotPresent
        env:
        - name: SUBPATHS
          value: "data|journal"
        - name: OWNER
          value: "1010"
        - name: GROUP
          value: "1010"
        volumeMounts:
        - name: rrdcached-volume
          mountPath: /volume
      {{- end }}
      containers:
      - name: rrdcached
        image: {{ .Values.rrdcached.image.repository }}:{{ .Values.rrdcached.image.tag }}
        envFrom:
        - configMapRef:
            name: rrdcached
        ports:
        - name: rrdcached
          containerPort: {{ .Values.rrdcached.providerPort }}
          protocol: TCP
        volumeMounts:
        - name: rrdcached-volume
          subPath: data
          mountPath: /data
        - name: rrdcached-volume
          subPath: journal
          mountPath: /journal
      volumes:
      - name: rrdcached-volume
        {{- if eq .Values.rrdcached.storage.type "temporary" }}
        emptyDir: {}
        {{- else if eq .Values.rrdcached.storage.type "static" }}
        persistentVolumeClaim:
          claimName: {{ required "the name of the pre-configured RRDCached persistent volume claim must be provided (librenmsServices.rrdcached.storage.claimName)" .Values.rrdcached.storage.claimName }}
        {{- else }}
        persistentVolumeClaim:
          claimName: rrdcached-volume-claim
        {{- end }}
{{- end }}
