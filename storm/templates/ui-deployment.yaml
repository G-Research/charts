{{- if .Values.ui.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "storm.ui.fullname" . }}
  labels:
    app: {{ template "storm.ui.name" . }}
    chart: {{ template "storm.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  namespace: {{ template "storm.namespace" . }}
spec:
  replicas: {{ .Values.ui.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "storm.ui.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "storm.ui.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.security.userid }}
        fsGroup: {{ .Values.security.groupid }}
      initContainers:
      - name: init-{{ template "storm.nimbus.fullname" . }}
        image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
        imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
        command: ["sh", "-c", "until storm list; do echo waiting for {{ template "storm.nimbus.fullname" . }}; sleep 10; done"]
        volumeMounts:
          - mountPath: "/conf"
            name: storm-configmap
      containers:
      - name: {{ .Values.ui.service.name }}
        image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
        imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
        command: ["storm", "ui"]
        ports:
        - containerPort: {{ .Values.ui.service.port }}
        resources:
{{ toYaml .Values.ui.resources | indent 10 }}
        volumeMounts:
          - mountPath: "/conf"
            name: storm-configmap
          - mountPath: "/log4j2"
            name: storm-logging-config
          - mountPath: /logs
            name: logs
      volumes:
        - name: storm-configmap
          configMap:
            name: {{ template "storm.config.name" . }}
        - name: storm-logging-config
          configMap:
            name: {{ template "storm.logging.name" . }}
        - name: logs
          emptyDir: {}
{{- end -}}