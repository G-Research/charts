apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "storm.config.name" . }}
  labels:
    chart: {{ template "storm.chart" $ }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
data:
  storm.yaml: |-
    storm.zookeeper.servers:
{{ include "storm.zookeeper.serverlist.yaml" $ | indent 6 }}
    storm.zookeeper.port: {{ include "storm.zookeeper.port" $ }}
    nimbus.seeds:
    {{- range $i, $e := until (int $.Values.nimbus.replicaCount) }}
    - {{ template "storm.nimbus.fullname" $ }}-{{ $i }}.{{ template "storm.nimbus.fullname" $ }}
    {{- end }}
    nimbus.thrift.port: {{ $.Values.nimbus.service.port }}
    storm.log4j2.conf.dir: {{ $.Values.store.log4j2conf }}
    storm.local.dir: {{ $.Values.store.localdatadir }}
    storm.log.dir: {{ $.Values.store.logdir }}
    nimbus.childopts: {{ $.Values.nimbus.childopts }}
    supervisor.childopts: {{ $.Values.supervisor.childopts }}
    ui.childopts: {{ $.Values.ui.childopts }}
    worker.childopts: {{ $.Values.supervisor.worker.childopts }}
    worker.heap.memory.mb: {{ $.Values.supervisor.worker.heap_memory_mb }}
    storm.metricstore.rocksdb.location: {{ $.Values.store.metricsdb }}
    supervisor.slots.ports:
    {{- range $i, $e := until (int $.Values.supervisor.slots) }}
      - {{add $i 6700}}
    {{- end }}
    ui.header.buffer.bytes: {{ $.Values.ui.header.bufferbytes }}
    supervisor.memory.capacity.mb: {{ $.Values.supervisor.resources.limits.memory }}
    #By convention 1 cpu core should be about 100, but this can be adjusted if needed
    # using 100 makes it simple to set the desired value to the capacity measurement
    # for single threaded bolts
    supervisor.cpu.capacity: {{mul $.Values.supervisor.resources.limits.cpu 100}}
    topology.fall.back.on.java.serialization: {{ $.Values.topology.javaserialization }}
    topology.disable.loadaware.messaging: {{ $.Values.topology.loadaware.disablemessaging }}
    topology.metrics.reporters: [
      {
        "filter": {
          "expression": ".*",
          "class": "org.apache.storm.metrics2.filters.RegexFilter"
        },
        "report.period": 15,
        "report.period.units": "SECONDS",
        "class": "org.apache.storm.metrics2.reporters.JmxStormReporter"
      }
    ]

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "storm.logging.name" . }}
  labels:
    chart: {{ template "storm.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  namespace: {{ template "storm.namespace" . }}
data:
  {{- $files := .Files }}
  {{- range tuple "cluster.xml" "worker.xml" }}
  {{ . }}: |-
{{ $files.Get . | indent 4 }}
  {{- end }}

---
{{- if .Values.jmx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "jmx.config.name" . }}
  labels:
    chart: {{ template "storm.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  namespace: {{ template "storm.namespace" . }}
data:
  config.yaml: {{- .Values.jmx.config | toYaml | indent 2 }}
{{- end }} 