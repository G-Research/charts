name: publish-charts

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository from where we want to build Charts'
        required: true
      repo_ref:
        description: 'The branch/tag that will be used as new version for charts. Usually tag ref'
        required: true
      repo_chart:
        description: 'Object with source path, destination path and chart name'
        required: true
      currentChartVersion:
        description: 'Chart version set in `Chart.yaml`. Default: `LATEST`'
        required: false
        default: 'LATEST'

env:
  REPO: ${{ github.event.inputs.repo }}
  REPO_REF: ${{ github.event.inputs.repo_ref }}
  CurrentChartVersion: ${{ github.event.inputs.currentChartVersion }}

jobs:
  publish-charts:
    runs-on: ubuntu-latest
    name: Publish charts
    continue-on-error: true
    strategy:
      max-parallel: 1
      matrix: ${{ fromJson(github.event.inputs.repo_chart) }}
    steps:

      - id: checkout-gh-pages
        uses: actions/checkout@v2 # Checkout Charts - gh-pages
        with:
          ref: 'gh-pages'
          fetch-depth: 0

      - id: checkout-helm-src
        uses: actions/checkout@v2 # Checkout Helm source code
        with:
          repository: ${{ env.REPO }}
          ref: ${{ env.REPO_REF }}
          path: ${{ env.REPO }}

      - id: chart-version
        name: 'Set version - ${{ env.REPO_REF }}'
        if: ${{ steps.checkout-gh-pages.outcome == 'success' && steps.checkout-helm-src.outcome == 'success' }}
        run: |
          find . \( -name "Chart.yaml" -o -name "values.yaml" \) -exec sed -i s/${{ env.CurrentChartVersion }}/${{ env.REPO_REF }}/ {} + 
          echo "Replacing ${{ env.CurrentChartVersion }} with new version ${{ env.REPO_REF }}."
        working-directory: ./${{ env.REPO }}

      - id: check
        name: 'Check if chart already exist'
        if: ${{ steps.chart-version.outcome == 'success' }}
        run: |
          FILE=$(grep name ${{ env.REPO }}/${{ matrix.src_path }}Chart.yaml | awk '{print $2}')
          if [[ -f "${{ matrix.dst_path }}$FILE-${{ env.REPO_REF }}.tgz" ]]; then 
            echo "Chart already exists." 
            echo "${{ matrix.dst_path }}$FILE-${{ env.REPO_REF }}.tgz"
            ls -larth ${{ matrix.dst_path }}
            exit 1
          else
            echo "File doesn't exist, continue with packaging"
          fi

      - id: package
        name: Package ${{ matrix.chart }}-${{ env.REPO_REF }}.tgz
        if: ${{ steps.chart-version.outcome == 'success' && steps.check.outcome == 'success' }}
        run: |
          helm package ${{ matrix.src_path }} -d ../../${{ matrix.dst_path }}
          helm repo index ../../
        working-directory: ./${{ env.REPO }}

      - id: publish
        name: 'Push ${{ matrix.chart }}-${{ env.REPO_REF }}.tgz to gh-pages'
        if: ${{ steps.package.outcome == 'success' }}
        run: |
          git config user.name charts-admin
          git config user.email charts@gresearch.io

          git add ${{ matrix.dst_path }}/ index.yaml
          git commit -m "Publish ${{ matrix.chart }}-${{ env.REPO_REF }}.tgz"
          git push origin HEAD 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}